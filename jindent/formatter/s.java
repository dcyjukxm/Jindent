package jindent.formatter;

public interface s {
   int _INSERTED_TOKEN = 4000;
   int _SOF = 4001;
   int _REGULAR_EXPRESSION = 4002;
   int _DECLARATION = 5000;
   int _ASSIGNMENT = 5001;
   int _BIT_FIELD = 5002;
   int _STRING_LITERAL = 5003;
   int _LABEL = 5004;
   int _METADATA_DEFAULT = 5005;
   int _PARAMETER_DECLARATION = 5006;
   int _NL = -1;
   int _B = -2;
   int _LBRNL = -3;
   int _RBRNL = -4;
   int _I = -6;
   int _O = -7;
   int _EXPECT_JAVADOC = -8;
   int _EXPECT_DOXYGEN = -9;
   int _SET_GRAMMAR_TYPE = -10;
   int _RESET_GRAMMAR_TYPE = -11;
   int _CLEAR_GRAMMAR_TYPE = -12;
   int _SET_CHUNK_TYPE = -13;
   int _RESET_CHUNK_TYPE = -14;
   int _CLEAR_CHUNK_TYPE = -15;
   int _SET_INDENT_GROUP = -16;
   int _REFERENCE_POINT = -17;
   int _BREAK_POINT = -18;
   int _WRAP_POINT = -19;
   int _RECURSIVE_LEVEL = -20;
   int _DELETE = -24;
   int _LINE_FEED = -25;
   int _SUPRESS_LINE_WRAPPING = -26;
   int _ALLOW_LINE_WRAPPING = -27;
   int _COMMENT = -28;
   int _IBLB = -38;
   int _IBRB = -39;
   int _IBEB = -40;
   int _IARB = -41;
   int _JINDENT_NOTE = -49;
   int _CONVENTION_NOTE = -51;
   int _BLOCK_START = -55;
   int _BLOCK_END = -56;
   int _COMMENT_LINE_FEED = -60;
   int _CORRECT_ASSIGMENT_GROUP = -66;
   int _CORRECT_BIT_FIELD_GROUP = -67;
   int _ALIGN_TO_TOKEN = -68;
   int _GOTO_FIRST_LEVEL = -69;
   int _BACK_TO_INDENT = -70;
   int _DEPENDING_ALIGNMENT = -94;
   int _JINDENT_ON = -95;
   int _JINDENT_OFF = -96;
   int _WRAP_REF = -97;
   int _NOP = -100;
   int _REMOTE_ALIGNMENT = -101;
   int _SET_MARGIN = -102;
   int _OPEN_DEEP_DECLARATION = -103;
   int _CLOSE_DEEP_DECLARATION = -104;
   int _IBLB_BACK = -111;
   int _SET_INDENT_PREPROCESSOR_LINE_WRAPPING = -117;
   int _CLEAR_INDENT_PREPROCESSOR_LINE_WRAPPING = -118;
   int _PADDING_OPEN = -200;
   int _PADDING_CLOSE = -201;
   int _SPACE = -202;
   int _BLANK_LINE = -203;
   int _BLOCK_COMMENT = -1;
   int _SINGLE_LINE_COMMENT = -2;
   int _SINGLE_LINE_COMMENT_BETWEEN_CODE = -3;
   int _SINGLE_LINE_COMMENT_AS_TRAILING_COMMENT = -4;
   int _BLOCK_OF_TRAILING_COMMENTS = -5;
   int _SINGLE_END_OF_LINE_COMMENT = -6;
   int _END_OF_LINE_COMMENT_AS_TRAILING_COMMENT = -7;
   int _JAVADOC_COMMENT = -8;
   int _NEW_LINE = -10;
   int _DELETED_COMMENT = -11;
   int _DOXYGEN_BLOCK_COMMENT = -12;
   int _DOXYGEN_SINGLE_LINE_COMMENT = -13;
   int _DOXYGEN_SINGLE_LINE_COMMENT_BETWEEN_CODE = -14;
   int _DOXYGEN_SINGLE_LINE_COMMENT_AS_TRAILING_COMMENT = -15;
   int _DOXYGEN_BLOCK_OF_TRAILING_COMMENTS = -16;
   int _DOXYGEN_SINGLE_END_OF_LINE_COMMENT = -17;
   int _DOXYGEN_END_OF_LINE_COMMENT_AS_TRAILING_COMMENT = -18;
   int _DOXYGEN_JAVADOC_COMMENT = -19;
   int _IF_PREPROCESSOR_DIRECTIVE = -20;
   int _ELSE_PREPROCESSOR_DIRECTIVE = -21;
   int _ENDIF_PREPROCESSOR_DIRECTIVE = -22;
   int _MUTLI_LINE_IF_PREPROCESSOR_DIRECTIVE = -23;
   int _MUTLI_LINE_ELSE_PREPROCESSOR_DIRECTIVE = -24;
   int _MUTLI_LINE_ENDIF_PREPROCESSOR_DIRECTIVE = -25;
   int _INCLUDE_PREPROCESSOR_DIRECTIVE = -26;
   int _PRAGMA_PREPROCESSOR_DIRECTIVE = -27;
   int _WARNING_ERROR_PREPROCESSOR_DIRECTIVE = -28;
   int _DEFINE_PREPROCESSOR_DIRECTIVE = -29;
   int _LINE_PREPROCESSOR_DIRECTIVE = -30;
   int _UNKNOWN_PREPROCESSOR_DIRECTIVE = -31;
   int _COMMENTED_OUT_SOURCE_CODE = -32;
   int _ID_NOTHING = 0;
   int _ID_PACKAGE_DECLARATION = 1;
   int _ID_IMPORT_DECLARATION = 2;
   int _ID_CLASS_DECLARATION = 3;
   int _ID_INTERFACE_DECLARATION = 4;
   int _ID_METHOD_DECLARATION = 6;
   int _ID_EMPTY_METHOD_DECLARATION = 7;
   int _ID_CONSTRUCTOR_DECLARATION = 8;
   int _ID_BREAK_STATEMENT = 9;
   int _ID_CONTINUE_STATEMENT = 10;
   int _ID_RETURN_STATEMENT = 11;
   int _ID_THROW_STATEMENT = 12;
   int _ID_LOCAL_VARIABLE_DECLARATION = 13;
   int _ID_SWITCH_STATEMENT = 14;
   int _ID_IF_STATEMENT = 15;
   int _ID_WHILE_STATEMENT = 16;
   int _ID_DO_STATEMENT = 17;
   int _ID_FOR_STATEMENT = 18;
   int _ID_TRY_STATEMENT = 19;
   int _ID_SYNCHRONIZED_STATEMENT = 20;
   int _ID_STATEMENT_EXPRESSION = 21;
   int _ID_ASSIGNMENT = 22;
   int _ID_STATEMENT_POSTFIX_EXPRESSION = 23;
   int _ID_CONSTRUCTOR_INVOCATION = 24;
   int _ID_BLOCK = 25;
   int _ID_USE_NEXT_GRAMMAR = 26;
   int _ID_STATIC_INITIALIZER = 27;
   int _ID_INITIALIZER = 28;
   int _ID_ASSERT_STATEMENT = 29;
   int _ID_WITH_STATEMENT = 30;
   int _ID_CONSTANT_DECLARATION = 31;
   int _ID_ANNOTATION_DECLARATION = 32;
   int _ID_ENUM_DECLARATION = 33;
   int _ID_ENUM_ELEMENTS = 34;
   int _ID_ENUM_CLASS_BODY = 35;
   int _ID_FIELD_DECLARATION = 36;
   int _ID_EMPTY_CONSTRUCTOR_DECLARATION = 37;
   int _ID_SEMICOLONS_DECLARATION = 38;
   int _ID_USING_DECLARATION = 39;
   int _ID_USING_DIRECTIVE = 40;
   int _ID_LINKAGE_SPECIFICATION = 41;
   int _ID_ALIAS_NAMESPACE_DEFINITION = 42;
   int _ID_METHOD_CALL = 43;
   int _ID_CATCH_BLOCK_DECLARATION = 44;
   int _ID_MEMBER_DECLARATIONS = 45;
   int _ID_CONDITIONAL_EXPRESSION = 46;
   int _ID_OUTPUTSTREAM_EXPRESSION = 47;
   int _ID_MACRO_FUNCTION = 49;
   int _ID_TEMPLATE_DECLARATION = 50;
   int _ID_METADATA_DEFINITION = 51;
   int _ID_NAMESPACE_DEFINITION = 52;
   int _ID_GOTO_STATEMENT = 53;
   int _ID_DELETE_EXPRESSION = 54;
   int _ID_SWITCH_CASE = 55;
   int _ID_FILTERED_CODE = 100;
   int _ID_CLOSING_BRACE = 200;
   String emptyString = new String("");
   int NORMAL_EXPRESSION = 1;
   int UNARY_EXPRESSION = 2;
   boolean IS_NESTED = true;
   boolean IS_NOT_NESTED = false;
   boolean IS_EMBEDDED_IN_OPERATORS = true;
   boolean IS_NOT_EMBEDDED_IN_OPERATORS = false;
   boolean USE_STOP_TOKEN_LOOKAHEAD = true;
   boolean USE_NORMAL_LOOKAHEAD = false;
   boolean JAVADOC_IS_POSSIBLE = true;
   boolean JAVADOC_IS_NOT_POSSIBLE = false;
}
