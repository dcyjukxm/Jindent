package jindent.java;

public interface h {
   int EOF = 0;
   int SINGLE_LINE_COMMENT = 6;
   int FORMAL_COMMENT = 7;
   int MULTI_LINE_COMMENT = 8;
   int CATEGORY_COMMENT = 9;
   int NEWLINE = 10;
   int UNICODE_ESCAPE_SEQUENCE = 12;
   int HEXDIGIT = 13;
   int ABSTRACT = 14;
   int BOOLEAN = 15;
   int BREAK = 16;
   int BYTE = 17;
   int CASE = 18;
   int CATCH = 19;
   int CHAR = 20;
   int CLASS = 21;
   int CONTINUE = 22;
   int _DEFAULT = 23;
   int DO = 24;
   int DOUBLE = 25;
   int ELSE = 26;
   int EXTENDS = 27;
   int FALSE = 28;
   int FINAL = 29;
   int FINALLY = 30;
   int FLOAT = 31;
   int FOR = 32;
   int GOTO = 33;
   int IF = 34;
   int IMPLEMENTS = 35;
   int IMPORT = 36;
   int INSTANCEOF = 37;
   int INT = 38;
   int INTERFACE = 39;
   int LONG = 40;
   int NATIVE = 41;
   int NEW = 42;
   int NULL = 43;
   int PACKAGE = 44;
   int PRIVATE = 45;
   int PROTECTED = 46;
   int PUBLIC = 47;
   int RETURN = 48;
   int SHORT = 49;
   int STATIC = 50;
   int SUPER = 51;
   int SWITCH = 52;
   int SYNCHRONIZED = 53;
   int THIS = 54;
   int THROW = 55;
   int THROWS = 56;
   int TRANSIENT = 57;
   int TRUE = 58;
   int TRY = 59;
   int VOID = 60;
   int VOLATILE = 61;
   int WHILE = 62;
   int STRICTFP = 63;
   int INTEGER_LITERAL = 64;
   int DECIMAL_LITERAL = 65;
   int HEX_LITERAL = 66;
   int OCTAL_LITERAL = 67;
   int FLOATING_POINT_LITERAL = 68;
   int BINARY_LITERAL = 69;
   int EXPONENT = 70;
   int CHARACTER_LITERAL = 71;
   int STRING_LITERAL = 72;
   int IDENTIFIER = 73;
   int LETTER = 74;
   int DIGIT = 75;
   int LPAREN = 76;
   int RPAREN = 77;
   int LBRACE = 78;
   int RBRACE = 79;
   int LBRACKET = 80;
   int RBRACKET = 81;
   int SEMICOLON = 82;
   int COMMA = 83;
   int DOT = 84;
   int VARARG = 85;
   int ASSIGN = 86;
   int ARROW = 87;
   int GT = 88;
   int LT = 89;
   int BANG = 90;
   int TILDE = 91;
   int HOOK = 92;
   int COLON = 93;
   int COLON_COLON = 94;
   int EQ = 95;
   int LE = 96;
   int GE = 97;
   int NE = 98;
   int SC_OR = 99;
   int SC_AND = 100;
   int INCR = 101;
   int DECR = 102;
   int PLUS = 103;
   int MINUS = 104;
   int STAR = 105;
   int SLASH = 106;
   int BIT_AND = 107;
   int BIT_OR = 108;
   int XOR = 109;
   int REM = 110;
   int LSHIFT = 111;
   int PLUSASSIGN = 112;
   int MINUSASSIGN = 113;
   int STARASSIGN = 114;
   int SLASHASSIGN = 115;
   int ANDASSIGN = 116;
   int ORASSIGN = 117;
   int XORASSIGN = 118;
   int REMASSIGN = 119;
   int LSHIFTASSIGN = 120;
   int RSIGNEDSHIFTASSIGN = 121;
   int RUNSIGNEDSHIFTASSIGN = 122;
   int ATTRIBUTE = 123;
   int DEFAULT = 0;
   int IN_SINGLE_LINE_COMMENT = 1;
   int IN_FORMAL_COMMENT = 2;
   int IN_MULTI_LINE_COMMENT = 3;
   int IN_CATEGORY_COMMENT = 4;
   String[] tokenImage = new String[]{"<EOF>", "\" \"", "\"\\f\"", "\"//\"", "<token of kind 4>", "\"/*\"", "<SINGLE_LINE_COMMENT>", "\"*/\"", "\"*/\"", "\"*/\"", "<NEWLINE>", "<token of kind 11>", "<UNICODE_ESCAPE_SEQUENCE>", "<HEXDIGIT>", "\"abstract\"", "\"boolean\"", "\"break\"", "\"byte\"", "\"case\"", "\"catch\"", "\"char\"", "\"class\"", "\"continue\"", "\"default\"", "\"do\"", "\"double\"", "\"else\"", "\"extends\"", "\"false\"", "\"final\"", "\"finally\"", "\"float\"", "\"for\"", "\"goto\"", "\"if\"", "\"implements\"", "\"import\"", "\"instanceof\"", "\"int\"", "\"interface\"", "\"long\"", "\"native\"", "\"new\"", "\"null\"", "\"package\"", "\"private\"", "\"protected\"", "\"public\"", "\"return\"", "\"short\"", "\"static\"", "\"super\"", "\"switch\"", "\"synchronized\"", "\"this\"", "\"throw\"", "\"throws\"", "\"transient\"", "\"true\"", "\"try\"", "\"void\"", "\"volatile\"", "\"while\"", "\"strictfp\"", "<INTEGER_LITERAL>", "<DECIMAL_LITERAL>", "<HEX_LITERAL>", "<OCTAL_LITERAL>", "<FLOATING_POINT_LITERAL>", "<BINARY_LITERAL>", "<EXPONENT>", "<CHARACTER_LITERAL>", "<STRING_LITERAL>", "<IDENTIFIER>", "<LETTER>", "<DIGIT>", "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"[\"", "\"]\"", "\";\"", "\",\"", "\".\"", "\"...\"", "\"=\"", "\"->\"", "\">\"", "\"<\"", "\"!\"", "\"~\"", "\"?\"", "\":\"", "\"::\"", "\"==\"", "\"<=\"", "\">=\"", "\"!=\"", "\"||\"", "\"&&\"", "\"++\"", "\"--\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\"&\"", "\"|\"", "\"^\"", "\"%\"", "\"<<\"", "\"+=\"", "\"-=\"", "\"*=\"", "\"/=\"", "\"&=\"", "\"|=\"", "\"^=\"", "\"%=\"", "\"<<=\"", "\">>=\"", "\">>>=\"", "\"@\""};
}
